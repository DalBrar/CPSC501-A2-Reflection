======================================================
Filename: script3.txt
Running Test: ClassB
Recursive: true
				public abstract interface Serializable {
				}

				public abstract interface Runnable {
					// Methods
					public abstract void run() 
				
				}

			public final class ClassA implements Serializable, Runnable {
				// Constructors
				public ClassA() 
				public ClassA(int) 
			
				// Methods
				public void run() 
				public String toString() 
				public void setVal(int) throws Exception
				private void printSomething() 
				public int getVal() 
			
				// Fields
				private int val = 17
				private double val2 = 0.2
				private boolean val3 = true
			}

Array ClassA[] of component class [LClassA; size of 10
[null, null, null, null, null, null, null, null, null, null]
		public class ClassD {
			// Constructors
			public ClassD() 
			public ClassD(int) 
		
			// Methods
			public String toString() 
			public int getVal3() 
		
			// Fields
			private ClassA val = ClassA@14ae5a5
			private static ClassA val2 = null
			private int val3 = 34
			private ClassA[] vallarray = ClassA[]@135fbaa4
		}

			public abstract interface InterfaceB {
				// Methods
				public abstract void func0(int, boolean) throws Exception
			
			}

		public abstract interface InterfaceA implements InterfaceB {
			// Methods
			public abstract int func2(String) throws Exception, ArithmeticException, IllegalMonitorStateException
			public abstract void func1(int, double, boolean, String) throws Exception
		
		}

			public abstract interface Serializable {
			}

			public abstract interface Runnable {
				// Methods
				public abstract void run() 
			
			}

		public final class ClassA implements Serializable, Runnable {
			// Constructors
			public ClassA() 
			public ClassA(int) 
		
			// Methods
			public void run() 
			public String toString() 
			public void setVal(int) throws Exception
			private void printSomething() 
			public int getVal() 
		
			// Fields
			private int val = 100
			private double val2 = 0.2
			private boolean val3 = true
		}

			public abstract interface Serializable {
			}

			public abstract interface Runnable {
				// Methods
				public abstract void run() 
			
			}

		public final class ClassA implements Serializable, Runnable {
			// Constructors
			public ClassA() 
			public ClassA(int) 
		
			// Methods
			public void run() 
			public String toString() 
			public void setVal(int) throws Exception
			private void printSomething() 
			public int getVal() 
		
			// Fields
			private int val = 2
			private double val2 = 0.2
			private boolean val3 = true
		}

			public abstract interface Serializable {
			}

			public abstract interface Runnable {
				// Methods
				public abstract void run() 
			
			}

		public final class ClassA implements Serializable, Runnable {
			// Constructors
			public ClassA() 
			public ClassA(int) 
		
			// Methods
			public void run() 
			public String toString() 
			public void setVal(int) throws Exception
			private void printSomething() 
			public int getVal() 
		
			// Fields
			private int val = 3
			private double val2 = 0.2
			private boolean val3 = true
		}

	public abstract class ClassC extends ClassD implements InterfaceA {
		// Constructors
		public ClassC() 
		public ClassC(int, int) 
	
		// Methods
		public void run() 
		public String toString() 
		public int func2(String) throws Exception, ArithmeticException, IllegalMonitorStateException
		public void func0(int, boolean) throws Exception
		public abstract void func3(int) 
		public void func1(int, double, boolean, String) throws Exception
	
		// Fields
		private ClassA val2 = ClassA@4b67cf4d
		private ClassA val3 = ClassA@7ea987ac
		private ClassA val4 = ClassA@12a3a380
	}

	public abstract interface Runnable {
		// Methods
		public abstract void run() 
	
	}

		public abstract interface Serializable {
		}

		public abstract interface Runnable {
			// Methods
			public abstract void run() 
		
		}

	public final class ClassA implements Serializable, Runnable {
		// Constructors
		public ClassA() 
		public ClassA(int) 
	
		// Methods
		public void run() 
		public String toString() 
		public void setVal(int) throws Exception
		private void printSomething() 
		public int getVal() 
	
		// Fields
		private int val = 3
		private double val2 = 0.2
		private boolean val3 = true
	}

		public abstract interface Serializable {
		}

		public abstract interface Runnable {
			// Methods
			public abstract void run() 
		
		}

	public final class ClassA implements Serializable, Runnable {
		// Constructors
		public ClassA() 
		public ClassA(int) 
	
		// Methods
		public void run() 
		public String toString() 
		public void setVal(int) throws Exception
		private void printSomething() 
		public int getVal() 
	
		// Fields
		private int val = 12
		private double val2 = 0.2
		private boolean val3 = true
	}

public class ClassB extends ClassC implements Runnable {
	// Constructors
	public ClassB() throws Exception

	// Methods
	public void run() 
	public String toString() 
	public void func3(int) 

	// Fields
	private ClassA val = ClassA@5cad8086
	private ClassA val2 = ClassA@6e0be858
	private ClassA val3 = null
}

======================================================
